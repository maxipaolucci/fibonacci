upstream client {
  # remember that client is declared as a service in docker-compose so works like a domain name or url
  server client:3000;
}

upstream api {
  # remember that api is declared as a service in docker-compose so works like a domain name or url
  server api:5000;
}

server {
  listen 80;

  location / {
    proxy_pass http://client;
  }

  # this is to fix an issue with websockets in the react server running in development mode with nginx, 
  # to allow refresh the browser every time the source code changes, we need to tell this url how to locate the 
  # react js server living in the client upstream and set some headers
  # just copy and paste. Comment it out and see the error apearing in the browser console pointing to /sockjs-node
  location /sockjs-node {
    proxy_pass http://client;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }
  
  location /api {
    # $1 here is the first group in the regex , everything after api
    rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
  }
}